<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.mapper.UserMapper">
    <resultMap type="com.example.demo.entity.User" id="User">
        <result column="id" jdbcType="VARCHAR" property="id"/>
        <result column="username" jdbcType="VARCHAR" property="username"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="email" jdbcType="VARCHAR" property="email"/>
        <result column="phone_number" jdbcType="VARCHAR" property="phoneNumber"/>
        <result column="address" jdbcType="VARCHAR" property="address"/>

    </resultMap>
    <insert id="insertUser" parameterType="com.example.demo.entity.User">
        INSERT INTO users (username, password, email, phone_number, address)
        VALUES (#{username}, #{password}, #{email}, #{phoneNumber}, #{address})
    </insert>

    <update id="updateUser" parameterType="com.example.demo.entity.User">
        UPDATE users
        SET username = #{username}, password = #{password}, email = #{email},
        phone_number = #{phoneNumber}, address = #{address}
        WHERE id = #{id}
    </update>

    <delete id="deleteUser" parameterType="java.lang.Long">
        DELETE FROM users WHERE id = #{userId}
    </delete>

    <select id="getUserById" parameterType="java.lang.Long" resultType="com.example.demo.entity.User">
        SELECT id, username, password, email, phone_number, address
        FROM users
        WHERE id = #{userId}
    </select>

    <select id="getAllUsers" resultMap="User">
        SELECT *
        FROM users
        where 1 = 1 and users.username like #{keyword} limit ${offset},${size}
    </select>

    <select id="getTotal" resultType="com.example.demo.utils.Total">

        SELECT count(*) as total
        FROM users
        where 1 = 1 and users.username like #{keyword}
    </select>

</mapper>
